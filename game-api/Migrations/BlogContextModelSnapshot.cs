// <auto-generated />
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace game_api.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("DB.Blog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Blog");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Blog");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DB.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogTableId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlogTableId");

                    b.ToTable("Post");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Post");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DB.BlogTable", b =>
                {
                    b.HasBaseType("DB.Blog");

                    b.HasDiscriminator().HasValue("BlogTable");
                });

            modelBuilder.Entity("DB.PostTable", b =>
                {
                    b.HasBaseType("DB.Post");

                    b.HasIndex("BlogId");

                    b.HasDiscriminator().HasValue("PostTable");
                });

            modelBuilder.Entity("DB.Post", b =>
                {
                    b.HasOne("DB.BlogTable", null)
                        .WithMany("Posts")
                        .HasForeignKey("BlogTableId");
                });

            modelBuilder.Entity("DB.PostTable", b =>
                {
                    b.HasOne("DB.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("BlogId");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("DB.BlogTable", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
